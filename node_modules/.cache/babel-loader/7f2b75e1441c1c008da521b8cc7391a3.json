{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\CardList.js\";\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { PropTypes } from 'prop-types';\nconst utils = {\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1))\n};\n\nconst CardList = props => {\n  const [availableNumbers, setAvailableNumbers] = useState([1, 2, 3, 4, 5, 6]);\n  const [usedNumbers, setUsedNumbers] = useState([]);\n\n  const createRandomNumbers = () => {\n    return [1, 2, 3, 4, 5, 6];\n  };\n\n  const getRandomNumbers = () => {\n    let number = utils.random(1, 6);\n    if (usedNumbers.includes(number)) setAvailableNumbers(availableNumbers.filter(n => n !== number));else setUsedNumbers(usedNumbers.concat(number));\n    return number;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    number: availableNumbers[0],\n    onReveal: props.addToSelecteds,\n    onHide: props.removeFromSelecteds,\n    canHide: props.canHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })));\n};\n\nCardList.propTypes = {\n  addToSelecteds: PropTypes.func,\n  removeFromSelecteds: PropTypes.func,\n  canHide: PropTypes.func\n};\nexport default CardList;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/CardList.js"],"names":["React","useState","Card","PropTypes","utils","random","min","max","Math","floor","CardList","props","availableNumbers","setAvailableNumbers","usedNumbers","setUsedNumbers","createRandomNumbers","getRandomNumbers","number","includes","filter","n","concat","addToSelecteds","removeFromSelecteds","canHide","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,MAAiBE,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX;AADlB,CAAd;;AAIA,MAAMI,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAD,CAAxD;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMe,mBAAmB,GAAG,MAAM;AAC9B,WAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,MAAM,GAAGd,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAb;AACA,QAAIS,WAAW,CAACK,QAAZ,CAAqBD,MAArB,CAAJ,EACIL,mBAAmB,CAACD,gBAAgB,CAACQ,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,KAAKH,MAAnC,CAAD,CAAnB,CADJ,KAGIH,cAAc,CAACD,WAAW,CAACQ,MAAZ,CAAmBJ,MAAnB,CAAD,CAAd;AACJ,WAAOA,MAAP;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEN,gBAAgB,CAAC,CAAD,CAA9B;AAAmC,IAAA,QAAQ,EAAED,KAAK,CAACY,cAAnD;AAAmE,IAAA,MAAM,EAAEZ,KAAK,CAACa,mBAAjF;AAAsG,IAAA,OAAO,EAAEb,KAAK,CAACc,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAsBH,CAvCD;;AAyCAf,QAAQ,CAACgB,SAAT,GAAsB;AAClBH,EAAAA,cAAc,EAAEpB,SAAS,CAACwB,IADR;AAElBH,EAAAA,mBAAmB,EAAErB,SAAS,CAACwB,IAFb;AAGlBF,EAAAA,OAAO,EAAEtB,SAAS,CAACwB;AAHD,CAAtB;AAMA,eAAejB,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst utils = {\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n}\r\n\r\nconst CardList = (props) => {\r\n    const [availableNumbers, setAvailableNumbers] = useState([1, 2, 3, 4, 5, 6]);\r\n    const [usedNumbers, setUsedNumbers] = useState([]);\r\n\r\n    const createRandomNumbers = () => {\r\n        return [1, 2, 3, 4, 5 ,6];\r\n    }\r\n\r\n    const getRandomNumbers = () => {\r\n        let number = utils.random(1, 6);\r\n        if (usedNumbers.includes(number))\r\n            setAvailableNumbers(availableNumbers.filter(n => n !== number));\r\n        else \r\n            setUsedNumbers(usedNumbers.concat(number));\r\n        return number;\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-field\">             \r\n            <div className=\"row\">                \r\n                <Card number={availableNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide} />                                \r\n                {/* <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n            </div>\r\n            <div className=\"row\">                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n            </div>\r\n            <div className=\"row\">                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/> */}\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nCardList.propTypes  = {    \r\n    addToSelecteds: PropTypes.func,\r\n    removeFromSelecteds: PropTypes.func,\r\n    canHide: PropTypes.func\r\n}\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}