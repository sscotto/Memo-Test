{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\Card.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './Card.css';\nimport CardBack from '../images/back_card.jpg';\nexport default function Card() {\n  const [showImg, setShowImg] = useState(false);\n  const [useGrayImg, setUseGrayImg] = useState(false);\n  useEffect(() => {\n    if (typeof props.number !== 'undefined' && typeof props.availables !== 'undefined' && !props.availables.includes(props.number)) {\n      setUseGrayImg(true);\n    }\n\n    return () => {};\n  }, [props.availables]);\n\n  const revealNumber = () => {\n    setShowImg(props.onReveal(props.number));\n  };\n\n  const hideNumber = () => {\n    if (props.canHide(props.number)) {\n      props.onHide(props.number);\n      setShowImg(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, console.log(\"Rendering:\", props.number), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: revealNumber,\n    className: \"img-card\",\n    src: CardBack,\n    style: {\n      display: showImg ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: hideNumber,\n    className: \"img-card\",\n    src: !useGrayImg ? props.buildImageUrl(props.number) : props.buildGrayImageUrl(props.number),\n    style: {\n      display: showImg ? 'inline' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n}\nCard.propTypes = {\n  buildImageUrl: PropTypes.func,\n  buildGrayImageUrl: PropTypes.func,\n  number: PropTypes.number,\n  onReveal: PropTypes.func,\n  onHide: PropTypes.func,\n  canHide: PropTypes.func,\n  availables: PropTypes.array\n};\nexport const MemorizedCard = React.memo(Card);","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/Card.js"],"names":["React","useState","useEffect","PropTypes","CardBack","Card","showImg","setShowImg","useGrayImg","setUseGrayImg","props","number","availables","includes","revealNumber","onReveal","hideNumber","canHide","onHide","console","log","display","buildImageUrl","buildGrayImageUrl","propTypes","func","array","MemorizedCard","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAOQ,KAAK,CAACC,MAAb,KAAwB,WAAxB,IACO,OAAOD,KAAK,CAACE,UAAb,KAA4B,WADnC,IAEO,CAACF,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0BH,KAAK,CAACC,MAAhC,CAFZ,EAEoD;AAChDF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACD,WAAO,MAAM,CAAG,CAAhB;AACH,GAPQ,EAOP,CAACC,KAAK,CAACE,UAAP,CAPO,CAAT;;AASA,QAAME,YAAY,GAAG,MAAM;AACvBP,IAAAA,UAAU,CAACG,KAAK,CAACK,QAAN,CAAeL,KAAK,CAACC,MAArB,CAAD,CAAV;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIN,KAAK,CAACO,OAAN,CAAcP,KAAK,CAACC,MAApB,CAAJ,EACA;AACID,MAAAA,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACC,MAAnB;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCY,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BV,KAAK,CAACC,MAAhC,CADD,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEG,YAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAEV,QAJT;AAKI,IAAA,KAAK,EAAE;AAACiB,MAAAA,OAAO,EAAEf,OAAO,GAAG,MAAH,GAAY;AAA7B,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEU,UAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAE,CAACR,UAAD,GAAcE,KAAK,CAACY,aAAN,CAAoBZ,KAAK,CAACC,MAA1B,CAAd,GAAiDD,KAAK,CAACa,iBAAN,CAAwBb,KAAK,CAACC,MAA9B,CAJ1D;AAKI,IAAA,KAAK,EAAE;AAACU,MAAAA,OAAO,EAAEf,OAAO,GAAG,QAAH,GAAc;AAA/B,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH;AAEDD,IAAI,CAACmB,SAAL,GAAkB;AACdF,EAAAA,aAAa,EAAEnB,SAAS,CAACsB,IADX;AAEdF,EAAAA,iBAAiB,EAAEpB,SAAS,CAACsB,IAFf;AAGdd,EAAAA,MAAM,EAAER,SAAS,CAACQ,MAHJ;AAIdI,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,IAJN;AAKdP,EAAAA,MAAM,EAAEf,SAAS,CAACsB,IALJ;AAMdR,EAAAA,OAAO,EAAEd,SAAS,CAACsB,IANL;AAOdb,EAAAA,UAAU,EAAET,SAAS,CAACuB;AAPR,CAAlB;AAUA,OAAO,MAAMC,aAAa,GAAG3B,KAAK,CAAC4B,IAAN,CAAWvB,IAAX,CAAtB","sourcesContent":["import React,  { useState, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport './Card.css'\r\nimport CardBack from '../images/back_card.jpg';\r\n\r\nexport default function Card() {    \r\n    const [showImg, setShowImg] = useState(false);    \r\n    const [useGrayImg, setUseGrayImg] = useState(false);\r\n\r\n    useEffect(() => {                      \r\n        if (typeof props.number !== 'undefined' \r\n                && typeof props.availables !== 'undefined' \r\n                && !props.availables.includes(props.number)){\r\n            setUseGrayImg(true);\r\n        }\r\n        return () => { }            \r\n    },[props.availables])\r\n\r\n    const revealNumber = () => {              \r\n        setShowImg(props.onReveal(props.number));             \r\n    }\r\n\r\n    const hideNumber = () => {\r\n        if (props.canHide(props.number))\r\n        {\r\n            props.onHide(props.number);\r\n            setShowImg(false);\r\n        }        \r\n    }\r\n\r\n    return (               \r\n        <div className=\"col-sm-3\">  \r\n        {console.log(\"Rendering:\", props.number)}                \r\n            <input \r\n                type=\"image\" \r\n                onClick={revealNumber} \r\n                className=\"img-card\" \r\n                src={CardBack}\r\n                style={{display: showImg ? 'none' : 'inline'}}\r\n                >\r\n            </input>       \r\n            <input \r\n                type=\"image\"\r\n                onClick={hideNumber}          \r\n                className=\"img-card\"\r\n                src={!useGrayImg ? props.buildImageUrl(props.number): props.buildGrayImageUrl(props.number)}\r\n                style={{display: showImg ? 'inline' : 'none'}}     \r\n                >\r\n            </input>\r\n        </div>\r\n        );\r\n}\r\n\r\nCard.propTypes  = {\r\n    buildImageUrl: PropTypes.func,\r\n    buildGrayImageUrl: PropTypes.func,\r\n    number: PropTypes.number,    \r\n    onReveal: PropTypes.func,\r\n    onHide: PropTypes.func,\r\n    canHide: PropTypes.func,\r\n    availables: PropTypes.array\r\n}\r\n\r\nexport const MemorizedCard = React.memo(Card);"]},"metadata":{},"sourceType":"module"}