{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useGameState=function useGameState(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selecteds=_useState2[0],setSelecteds=_useState2[1];var _useState3=useState([1,2,3,4,5,6]),_useState4=_slicedToArray(_useState3,2),availables=_useState4[0],setAvailables=_useState4[1];var _useState5=useState(25),_useState6=_slicedToArray(_useState5,2),secondsLeft=_useState6[0],setSecondsLeft=_useState6[1];useEffect(function(){if(secondsLeft>0&&availables.length>0){var timerId=setTimeout(function(){return setSecondsLeft(secondsLeft-1);},1000);return function(){return clearTimeout(timerId);};}});var addToSelecteds=function addToSelecteds(number){var canAddToSelecteds=selecteds.length===2?false:true;if(canAddToSelecteds){var newSelecteds=selecteds.concat(number);setSelecteds(newSelecteds);if(newSelecteds.length===2&&newSelecteds[0]===newSelecteds[1]){setAvailables(availables.filter(function(e){return e!==number;}));setSelecteds([]);}}return canAddToSelecteds;};var removeFromSelecteds=function removeFromSelecteds(number){if(selecteds.length===0)return;setSelecteds(selecteds.filter(function(s){return s!==number;}));};return{selecteds:selecteds,availables:availables,addToSelecteds:addToSelecteds,removeFromSelecteds:removeFromSelecteds,secondsLeft:secondsLeft};};export default useGameState;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/CustomHooks/UseGameState.js"],"names":["useState","useEffect","useGameState","selecteds","setSelecteds","availables","setAvailables","secondsLeft","setSecondsLeft","length","timerId","setTimeout","clearTimeout","addToSelecteds","number","canAddToSelecteds","newSelecteds","concat","filter","e","removeFromSelecteds","s"],"mappings":"2LAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACWF,QAAQ,CAAC,EAAD,CADnB,wCAChBG,SADgB,eACLC,YADK,8BAEaJ,QAAQ,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAD,CAFrB,yCAEhBK,UAFgB,eAEJC,aAFI,8BAGeN,QAAQ,CAAC,EAAD,CAHvB,yCAGhBO,WAHgB,eAGHC,cAHG,eAKvBP,SAAS,CAAC,UAAM,CACd,GAAIM,WAAW,CAAG,CAAd,EAAmBF,UAAU,CAACI,MAAX,CAAoB,CAA3C,CAA8C,CAC5C,GAAMC,CAAAA,OAAO,CAAGC,UAAU,CAAC,iBAAMH,CAAAA,cAAc,CAACD,WAAW,CAAG,CAAf,CAApB,EAAD,CAAwC,IAAxC,CAA1B,CACA,MAAO,kBAAMK,CAAAA,YAAY,CAACF,OAAD,CAAlB,EAAP,CACD,CACF,CALQ,CAAT,CAOA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAY,CAC/B,GAAIC,CAAAA,iBAAiB,CAAIZ,SAAS,CAACM,MAAV,GAAqB,CAAtB,CAA2B,KAA3B,CAAmC,IAA3D,CAEA,GAAIM,iBAAJ,CAAsB,CAClB,GAAIC,CAAAA,YAAY,CAAGb,SAAS,CAACc,MAAV,CAAiBH,MAAjB,CAAnB,CACAV,YAAY,CAACY,YAAD,CAAZ,CACA,GAAIA,YAAY,CAACP,MAAb,GAAwB,CAAxB,EAA6BO,YAAY,CAAC,CAAD,CAAZ,GAAoBA,YAAY,CAAC,CAAD,CAAjE,CAAqE,CAEjEV,aAAa,CAACD,UAAU,CAACa,MAAX,CAAkB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKL,MAAV,EAAnB,CAAD,CAAb,CACAV,YAAY,CAAC,EAAD,CAAZ,CACH,CACJ,CACD,MAAOW,CAAAA,iBAAP,CACH,CAbD,CAeA,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACN,MAAD,CAAY,CACpC,GAAIX,SAAS,CAACM,MAAV,GAAqB,CAAzB,CAA4B,OAE5BL,YAAY,CAACD,SAAS,CAACe,MAAV,CAAiB,SAAAG,CAAC,QAAIA,CAAAA,CAAC,GAAKP,MAAV,EAAlB,CAAD,CAAZ,CACH,CAJD,CAKA,MAAO,CAAEX,SAAS,CAATA,SAAF,CAAaE,UAAU,CAAVA,UAAb,CAAyBQ,cAAc,CAAdA,cAAzB,CAAyCO,mBAAmB,CAAnBA,mBAAzC,CAA8Db,WAAW,CAAXA,WAA9D,CAAP,CACH,CAjCD,CAmCA,cAAeL,CAAAA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useGameState = () => {\r\n    const [selecteds, setSelecteds] = useState([]);\r\n    const [availables, setAvailables] = useState([1, 2, 3, 4, 5, 6]); \r\n    const [secondsLeft, setSecondsLeft] = useState(25);\r\n\r\n    useEffect(() => {\r\n      if (secondsLeft > 0 && availables.length > 0) {       \r\n        const timerId = setTimeout(() => setSecondsLeft(secondsLeft - 1), 1000);\r\n        return () => clearTimeout(timerId);\r\n      }\r\n    });\r\n\r\n    const addToSelecteds = (number) => {\r\n        let canAddToSelecteds = (selecteds.length === 2) ? false : true;\r\n        \r\n        if (canAddToSelecteds){                    \r\n            let newSelecteds = selecteds.concat(number);\r\n            setSelecteds(newSelecteds)            \r\n            if (newSelecteds.length === 2 && newSelecteds[0] === newSelecteds[1]){ \r\n               \r\n                setAvailables(availables.filter(e => e !== number ));\r\n                setSelecteds([]);\r\n            }           \r\n        }\r\n        return canAddToSelecteds;\r\n    }       \r\n\r\n    const removeFromSelecteds = (number) => {\r\n        if (selecteds.length === 0) return;\r\n\r\n        setSelecteds(selecteds.filter(s => s !== number));\r\n    }\r\n    return { selecteds, availables, addToSelecteds, removeFromSelecteds, secondsLeft };\r\n}\r\n\r\nexport default useGameState;"]},"metadata":{},"sourceType":"module"}