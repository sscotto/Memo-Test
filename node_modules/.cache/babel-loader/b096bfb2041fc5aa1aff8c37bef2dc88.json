{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\CardList.js\";\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { PropTypes } from 'prop-types';\nconst utils = {\n  range: (min, max) => Array.from({\n    length: max - min + 1\n  }, (_, i) => min + i),\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1))\n};\n\nconst createRandomNumbers = () => {\n  return [1, 2, 3, 4, 5, 6];\n};\n\nconst CardList = props => {\n  const [availableNumbers, setAvailableNumbers] = useState(createRandomNumbers());\n  const [usedNumbers, setUsedNumbers] = useState([]);\n\n  const getRandomNumbers = () => {\n    let number = utils.random(1, 6);\n    if (usedNumbers.includes(number)) setAvailableNumbers(availableNumbers.filter(n => n !== number));else setUsedNumbers(usedNumbers.concat(number));\n    return number;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    number: availableNumbers[0],\n    onReveal: props.addToSelecteds,\n    onHide: props.removeFromSelecteds,\n    canHide: props.canHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })));\n};\n\nCardList.propTypes = {\n  addToSelecteds: PropTypes.func,\n  removeFromSelecteds: PropTypes.func,\n  canHide: PropTypes.func\n};\nexport default CardList;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/CardList.js"],"names":["React","useState","Card","PropTypes","utils","range","min","max","Array","from","length","_","i","random","Math","floor","createRandomNumbers","CardList","props","availableNumbers","setAvailableNumbers","usedNumbers","setUsedNumbers","getRandomNumbers","number","includes","filter","n","concat","addToSelecteds","removeFromSelecteds","canHide","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAcC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEH,GAAG,GAAGD,GAAN,GAAY;AAArB,GAAX,EAAoC,CAACK,CAAD,EAAIC,CAAJ,KAAUN,GAAG,GAAGM,CAApD,CADX;AAGVC,EAAAA,MAAM,EAAE,CAACP,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiBN,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX;AAHlB,CAAd;;AAMA,MAAMU,mBAAmB,GAAG,MAAM;AAE9B,SAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP;AACH,CAHD;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAACe,mBAAmB,EAApB,CAAxD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMsB,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,MAAM,GAAGpB,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAb;AACA,QAAIQ,WAAW,CAACI,QAAZ,CAAqBD,MAArB,CAAJ,EACIJ,mBAAmB,CAACD,gBAAgB,CAACO,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,KAAKH,MAAnC,CAAD,CAAnB,CADJ,KAGIF,cAAc,CAACD,WAAW,CAACO,MAAZ,CAAmBJ,MAAnB,CAAD,CAAd;AACJ,WAAOA,MAAP;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEL,gBAAgB,CAAC,CAAD,CAA9B;AAAmC,IAAA,QAAQ,EAAED,KAAK,CAACW,cAAnD;AAAmE,IAAA,MAAM,EAAEX,KAAK,CAACY,mBAAjF;AAAsG,IAAA,OAAO,EAAEZ,KAAK,CAACa,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAsBH,CAnCD;;AAqCAd,QAAQ,CAACe,SAAT,GAAsB;AAClBH,EAAAA,cAAc,EAAE1B,SAAS,CAAC8B,IADR;AAElBH,EAAAA,mBAAmB,EAAE3B,SAAS,CAAC8B,IAFb;AAGlBF,EAAAA,OAAO,EAAE5B,SAAS,CAAC8B;AAHD,CAAtB;AAMA,eAAehB,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst utils = {\r\n    range: (min, max) => Array.from({length: max - min + 1}, (_, i) => min + i),\r\n\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n}\r\n\r\nconst createRandomNumbers = () => {\r\n\r\n    return [1, 2, 3, 4, 5 ,6];\r\n}\r\n\r\nconst CardList = (props) => {\r\n    const [availableNumbers, setAvailableNumbers] = useState(createRandomNumbers());\r\n    const [usedNumbers, setUsedNumbers] = useState([]);\r\n\r\n    const getRandomNumbers = () => {\r\n        let number = utils.random(1, 6);\r\n        if (usedNumbers.includes(number))\r\n            setAvailableNumbers(availableNumbers.filter(n => n !== number));\r\n        else \r\n            setUsedNumbers(usedNumbers.concat(number));\r\n        return number;\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-field\">             \r\n            <div className=\"row\">                \r\n                <Card number={availableNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide} />                                \r\n                {/* <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n            </div>\r\n            <div className=\"row\">                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n            </div>\r\n            <div className=\"row\">                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n                <Card number={getRandomNumbers()} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/> */}\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nCardList.propTypes  = {    \r\n    addToSelecteds: PropTypes.func,\r\n    removeFromSelecteds: PropTypes.func,\r\n    canHide: PropTypes.func\r\n}\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}