{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\CardList.js\";\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { PropTypes } from 'prop-types';\nconst utils = {\n  range: (min, max) => Array.from({\n    length: max - min + 1\n  }, (_, i) => min + i),\n  random: (min, max) => min + Math.floor(Math.random() * (max - min + 1))\n};\n\nconst createRandomNumbers = () => {\n  let array1 = utils.range(1, 6);\n  let array2 = utils.range(1, 6);\n  return array1.concat(array2);\n};\n\nconst CardList = props => {\n  const [cardNumbers] = useState(createRandomNumbers());\n\n  const RenderCards = () => {\n    var cards = [];\n\n    for (let index = 0; index < cardNumbers.length; index++) {\n      cards[index] = /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        number: cardNumbers[index],\n        onReveal: props.addToSelecteds,\n        onHide: props.removeFromSelecteds,\n        canHide: props.canHide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return cards;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, RenderCards()) // <div className=\"game-field\">             \n  //     <div className=\"row\">                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide} />                                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //     </div>\n  //     <div className=\"row\">                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //     </div>\n  //     <div className=\"row\">                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\n  //     </div>\n  // </div>\n  ;\n};\n\nCardList.propTypes = {\n  addToSelecteds: PropTypes.func,\n  removeFromSelecteds: PropTypes.func,\n  canHide: PropTypes.func\n};\nexport default CardList;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/CardList.js"],"names":["React","useState","Card","PropTypes","utils","range","min","max","Array","from","length","_","i","random","Math","floor","createRandomNumbers","array1","array2","concat","CardList","props","cardNumbers","RenderCards","cards","index","addToSelecteds","removeFromSelecteds","canHide","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAcC,KAAK,CAACC,IAAN,CAAW;AAACC,IAAAA,MAAM,EAAEH,GAAG,GAAGD,GAAN,GAAY;AAArB,GAAX,EAAoC,CAACK,CAAD,EAAIC,CAAJ,KAAUN,GAAG,GAAGM,CAApD,CADX;AAGVC,EAAAA,MAAM,EAAE,CAACP,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiBN,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX;AAHlB,CAAd;;AAMA,MAAMU,mBAAmB,GAAG,MAAM;AAC9B,MAAIC,MAAM,GAAGb,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAb;AACA,MAAIa,MAAM,GAAGd,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAb;AACA,SAAOY,MAAM,CAACE,MAAP,CAAcD,MAAd,CAAP;AACH,CAJD;;AAMA,MAAME,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,WAAD,IAAgBrB,QAAQ,CAACe,mBAAmB,EAApB,CAA9B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACtB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,WAAW,CAACZ,MAAxC,EAAgDe,KAAK,EAArD,EAAyD;AACrDD,MAAAA,KAAK,CAACC,KAAD,CAAL,gBAAe,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,MAAM,EAAEH,WAAW,CAACG,KAAD,CAArC;AAA8C,QAAA,QAAQ,EAAEJ,KAAK,CAACK,cAA9D;AAA8E,QAAA,MAAM,EAAEL,KAAK,CAACM,mBAA5F;AAAiH,QAAA,OAAO,EAAEN,KAAK,CAACO,OAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AACD,WAAOJ,KAAP;AACH,GAND;;AASA,sBAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,WAAW,EADf,CAFJ,CAKI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBJ;AA0BH,CAtCD;;AAwCAH,QAAQ,CAACS,SAAT,GAAsB;AAClBH,EAAAA,cAAc,EAAEvB,SAAS,CAAC2B,IADR;AAElBH,EAAAA,mBAAmB,EAAExB,SAAS,CAAC2B,IAFb;AAGlBF,EAAAA,OAAO,EAAEzB,SAAS,CAAC2B;AAHD,CAAtB;AAMA,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './Card';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst utils = {\r\n    range: (min, max) => Array.from({length: max - min + 1}, (_, i) => min + i),\r\n\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n}\r\n\r\nconst createRandomNumbers = () => {\r\n    let array1 = utils.range(1, 6);\r\n    let array2 = utils.range(1, 6);\r\n    return array1.concat(array2);\r\n}\r\n\r\nconst CardList = (props) => {\r\n    const [cardNumbers] = useState(createRandomNumbers());\r\n\r\n    const RenderCards = () => {\r\n        var cards = [];\r\n        for (let index = 0; index < cardNumbers.length; index++) {\r\n            cards[index] = <Card key={index} number={cardNumbers[index]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide} />         \r\n        }\r\n        return cards;\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"game-field\">            \r\n           {RenderCards()}\r\n        </div>\r\n        // <div className=\"game-field\">             \r\n        //     <div className=\"row\">                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide} />                                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //     </div>\r\n        //     <div className=\"row\">                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //     </div>\r\n        //     <div className=\"row\">                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>                                \r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //         <Card number={cardNumbers[0]} onReveal={props.addToSelecteds} onHide={props.removeFromSelecteds} canHide={props.canHide}/>\r\n        //     </div>\r\n        // </div>\r\n        );\r\n}\r\n\r\nCardList.propTypes  = {    \r\n    addToSelecteds: PropTypes.func,\r\n    removeFromSelecteds: PropTypes.func,\r\n    canHide: PropTypes.func\r\n}\r\n\r\nexport default CardList;"]},"metadata":{},"sourceType":"module"}