{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\Card.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './Card.css';\nimport CardBack from '../images/back_card.jpg';\n\nfunction Card(props) {\n  const [showImg, setShowImg] = useState(false);\n  useEffect(() => {\n    console.log(props.availables);\n    if (typeof props.availables === 'undefined') console.log(\"NO\");\n  }, [props.availables]);\n\n  const revealNumber = () => {\n    setShowImg(props.onReveal(props.number));\n  };\n\n  const hideNumber = () => {\n    if (props.canHide(props.number)) {\n      props.onHide(props.number);\n      setShowImg(false);\n    }\n  };\n\n  const imageRef = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: revealNumber,\n    className: \"img-card\",\n    src: CardBack,\n    style: {\n      display: showImg ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: hideNumber,\n    className: \"img-card\",\n    src: props.buildImageUrl(props.number),\n    ref: imageRef,\n    style: {\n      display: showImg ? 'inline' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}\n\nCard.propTypes = {\n  buildImageUrl: PropTypes.func,\n  buildGrayImageUrl: PropTypes.func,\n  number: PropTypes.number,\n  onReveal: PropTypes.func,\n  onHide: PropTypes.func,\n  canHide: PropTypes.func,\n  availables: PropTypes.array\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/Card.js"],"names":["React","useState","useRef","useEffect","PropTypes","CardBack","Card","props","showImg","setShowImg","console","log","availables","revealNumber","onReveal","number","hideNumber","canHide","onHide","imageRef","display","buildImageUrl","propTypes","func","buildGrayImageUrl","array"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,UAAlB;AACA,QAAI,OAAOL,KAAK,CAACK,UAAb,KAA4B,WAAhC,EACIF,OAAO,CAACC,GAAR,CAAY,IAAZ;AACP,GAJQ,EAIP,CAACJ,KAAK,CAACK,UAAP,CAJO,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,UAAU,CAACF,KAAK,CAACO,QAAN,CAAeP,KAAK,CAACQ,MAArB,CAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIT,KAAK,CAACU,OAAN,CAAcV,KAAK,CAACQ,MAApB,CAAJ,EACA;AACIR,MAAAA,KAAK,CAACW,MAAN,CAAaX,KAAK,CAACQ,MAAnB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAND;;AAQA,QAAMU,QAAQ,GAAGjB,MAAM,CAAC,IAAD,CAAvB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEW,YAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAER,QAJT;AAKI,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAEZ,OAAO,GAAG,MAAH,GAAY;AAA7B,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEQ,UAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAET,KAAK,CAACc,aAAN,CAAoBd,KAAK,CAACQ,MAA1B,CAJT;AAKI,IAAA,GAAG,EAAEI,QALT;AAMI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAEZ,OAAO,GAAG,QAAH,GAAc;AAA/B,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAqBH;;AAEDF,IAAI,CAACgB,SAAL,GAAkB;AACdD,EAAAA,aAAa,EAAEjB,SAAS,CAACmB,IADX;AAEdC,EAAAA,iBAAiB,EAAEpB,SAAS,CAACmB,IAFf;AAGdR,EAAAA,MAAM,EAAEX,SAAS,CAACW,MAHJ;AAIdD,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAJN;AAKdL,EAAAA,MAAM,EAAEd,SAAS,CAACmB,IALJ;AAMdN,EAAAA,OAAO,EAAEb,SAAS,CAACmB,IANL;AAOdX,EAAAA,UAAU,EAAER,SAAS,CAACqB;AAPR,CAAlB;AAUA,eAAenB,IAAf","sourcesContent":["import React,  { useState, useRef, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport './Card.css'\r\nimport CardBack from '../images/back_card.jpg';\r\n\r\nfunction Card(props) {    \r\n    const [showImg, setShowImg] = useState(false);    \r\n\r\n    useEffect(() => {\r\n        console.log(props.availables);\r\n        if (typeof props.availables === 'undefined')\r\n            console.log(\"NO\");\r\n    },[props.availables])\r\n\r\n    const revealNumber = () => {              \r\n        setShowImg(props.onReveal(props.number));             \r\n    }\r\n\r\n    const hideNumber = () => {\r\n        if (props.canHide(props.number))\r\n        {\r\n            props.onHide(props.number);\r\n            setShowImg(false);\r\n        }        \r\n    }\r\n\r\n    const imageRef = useRef(null);\r\n\r\n    return (\r\n        <div className=\"col-sm-3\">           \r\n            <input \r\n                type=\"image\" \r\n                onClick={revealNumber} \r\n                className=\"img-card\" \r\n                src={CardBack}\r\n                style={{display: showImg ? 'none' : 'inline'}}\r\n                >\r\n            </input>       \r\n            <input \r\n                type=\"image\"\r\n                onClick={hideNumber}          \r\n                className=\"img-card\"\r\n                src={props.buildImageUrl(props.number)}\r\n                ref={imageRef}\r\n                style={{display: showImg ? 'inline' : 'none'}}     \r\n                >\r\n            </input>\r\n        </div>\r\n        );\r\n}\r\n\r\nCard.propTypes  = {\r\n    buildImageUrl: PropTypes.func,\r\n    buildGrayImageUrl: PropTypes.func,\r\n    number: PropTypes.number,    \r\n    onReveal: PropTypes.func,\r\n    onHide: PropTypes.func,\r\n    canHide: PropTypes.func,\r\n    availables: PropTypes.array\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}