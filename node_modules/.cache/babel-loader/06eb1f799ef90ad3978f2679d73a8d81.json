{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\Card.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport './Card.css';\nimport CardBack from '../images/back_card.jpg';\nimport { useEffect, useState } from 'react';\n\nfunction Card(props) {\n  const [showImg, setShowImg] = useState(false);\n  const [useGrayImg, setUseGrayImg] = useState(false);\n  useEffect(() => {\n    console.log(\"Using Effect\");\n\n    if (typeof number !== 'undefined' && typeof availables !== 'undefined' && !props.availables.includes(props.number)) {\n      setUseGrayImg(true);\n    }\n\n    return () => {};\n  }, [props.availables]);\n\n  const revealNumber = () => {\n    setShowImg(props.onReveal(props.number));\n  };\n\n  const hideNumber = () => {\n    if (props.canHide(props.number)) {\n      props.onHide(props.number);\n      setShowImg(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: revealNumber,\n    className: \"img-card\",\n    src: CardBack,\n    style: {\n      display: showImg ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    onClick: hideNumber,\n    className: \"img-card\",\n    src: !useGrayImg ? props.buildImageUrl(props.number) : props.buildGrayImageUrl(props.number),\n    style: {\n      display: showImg ? 'inline' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n}\n\nCard.propTypes = {\n  buildImageUrl: PropTypes.func,\n  buildGrayImageUrl: PropTypes.func,\n  number: PropTypes.number,\n  onReveal: PropTypes.func,\n  onHide: PropTypes.func,\n  canHide: PropTypes.func,\n  availables: PropTypes.array\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/Card.js"],"names":["React","PropTypes","CardBack","useEffect","useState","Card","props","showImg","setShowImg","useGrayImg","setUseGrayImg","console","log","number","availables","includes","revealNumber","onReveal","hideNumber","canHide","onHide","display","buildImageUrl","buildGrayImageUrl","propTypes","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IACO,OAAOC,UAAP,KAAsB,WAD7B,IAEO,CAACR,KAAK,CAACQ,UAAN,CAAiBC,QAAjB,CAA0BT,KAAK,CAACO,MAAhC,CAFZ,EAEoD;AAChDH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACD,WAAO,MAAM,CAAG,CAAhB;AACH,GARQ,EAQP,CAACJ,KAAK,CAACQ,UAAP,CARO,CAAT;;AAUA,QAAME,YAAY,GAAG,MAAM;AACvBR,IAAAA,UAAU,CAACF,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACO,MAArB,CAAD,CAAV;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIZ,KAAK,CAACa,OAAN,CAAcb,KAAK,CAACO,MAApB,CAAJ,EACA;AACIP,MAAAA,KAAK,CAACc,MAAN,CAAad,KAAK,CAACO,MAAnB;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEQ,YAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAEd,QAJT;AAKI,IAAA,KAAK,EAAE;AAACmB,MAAAA,OAAO,EAAEd,OAAO,GAAG,MAAH,GAAY;AAA7B,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,OAAO,EAAEW,UAFb;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,GAAG,EAAE,CAACT,UAAD,GAAcH,KAAK,CAACgB,aAAN,CAAoBhB,KAAK,CAACO,MAA1B,CAAd,GAAiDP,KAAK,CAACiB,iBAAN,CAAwBjB,KAAK,CAACO,MAA9B,CAJ1D;AAKI,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAEd,OAAO,GAAG,QAAH,GAAc;AAA/B,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAoBH;;AAEDF,IAAI,CAACmB,SAAL,GAAkB;AACdF,EAAAA,aAAa,EAAErB,SAAS,CAACwB,IADX;AAEdF,EAAAA,iBAAiB,EAAEtB,SAAS,CAACwB,IAFf;AAGdZ,EAAAA,MAAM,EAAEZ,SAAS,CAACY,MAHJ;AAIdI,EAAAA,QAAQ,EAAEhB,SAAS,CAACwB,IAJN;AAKdL,EAAAA,MAAM,EAAEnB,SAAS,CAACwB,IALJ;AAMdN,EAAAA,OAAO,EAAElB,SAAS,CAACwB,IANL;AAOdX,EAAAA,UAAU,EAAEb,SAAS,CAACyB;AAPR,CAAlB;AAUA,eAAerB,IAAf","sourcesContent":["import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport './Card.css'\r\nimport CardBack from '../images/back_card.jpg';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Card(props) {    \r\n    const [showImg, setShowImg] = useState(false);    \r\n    const [useGrayImg, setUseGrayImg] = useState(false);\r\n\r\n    \r\n    useEffect(() => {    \r\n        console.log(\"Using Effect\");                  \r\n        if (typeof number !== 'undefined' \r\n                && typeof availables !== 'undefined' \r\n                && !props.availables.includes(props.number)){\r\n            setUseGrayImg(true);\r\n        }\r\n        return () => { }            \r\n    },[props.availables])  \r\n\r\n    const revealNumber = () => {              \r\n        setShowImg(props.onReveal(props.number));             \r\n    }\r\n\r\n    const hideNumber = () => {\r\n        if (props.canHide(props.number))\r\n        {\r\n            props.onHide(props.number);\r\n            setShowImg(false);\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"col-sm-3\">           \r\n            <input \r\n                type=\"image\" \r\n                onClick={revealNumber} \r\n                className=\"img-card\" \r\n                src={CardBack}\r\n                style={{display: showImg ? 'none' : 'inline'}}\r\n                >\r\n            </input>       \r\n            <input \r\n                type=\"image\"\r\n                onClick={hideNumber}          \r\n                className=\"img-card\"\r\n                src={!useGrayImg ? props.buildImageUrl(props.number): props.buildGrayImageUrl(props.number)}\r\n                style={{display: showImg ? 'inline' : 'none'}}     \r\n                >\r\n            </input>\r\n        </div>\r\n        );\r\n}\r\n\r\nCard.propTypes  = {\r\n    buildImageUrl: PropTypes.func,\r\n    buildGrayImageUrl: PropTypes.func,\r\n    number: PropTypes.number,    \r\n    onReveal: PropTypes.func,\r\n    onHide: PropTypes.func,\r\n    canHide: PropTypes.func,\r\n    availables: PropTypes.array\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}