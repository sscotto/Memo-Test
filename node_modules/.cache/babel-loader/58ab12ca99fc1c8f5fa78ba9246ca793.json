{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useGameState = () => {\n  const [selecteds, setSelecteds] = useState([]);\n  const [availables, setAvailables] = useState([1, 2, 3, 4, 5, 6]);\n  const [secondsLeft, setSecondsLeft] = useState(10);\n  useEffect(() => {\n    if (secondsLeft > 0 && availables.length > 0) {\n      const timerId = setTimeout(() => setSecondsLeft(secondsLeft - 1), 1000);\n      return () => clearTimeout(timerId);\n    }\n  });\n\n  const addToSelecteds = number => {\n    let canAddToSelecteds = selecteds.length === 2 ? false : true;\n\n    if (canAddToSelecteds) {\n      let newSelecteds = selecteds.concat(number);\n      setSelecteds(newSelecteds);\n\n      if (newSelecteds.length === 2 && newSelecteds[0] === newSelecteds[1]) {\n        setAvailables(availables.filter(e => e !== number));\n        setSelecteds([]);\n      }\n    }\n\n    return canAddToSelecteds;\n  };\n\n  const removeFromSelecteds = number => {\n    if (selecteds.length === 0) return;\n    setSelecteds(selecteds.filter(s => s !== number));\n  };\n\n  return {\n    selecteds,\n    availables,\n    addToSelecteds,\n    removeFromSelecteds\n  };\n};\n\nexport default useGameState;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/CustomHooks/UseGameState.js"],"names":["useState","useEffect","useGameState","selecteds","setSelecteds","availables","setAvailables","secondsLeft","setSecondsLeft","length","timerId","setTimeout","clearTimeout","addToSelecteds","number","canAddToSelecteds","newSelecteds","concat","filter","e","removeFromSelecteds","s"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAD,CAA5C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,WAAW,GAAG,CAAd,IAAmBF,UAAU,CAACI,MAAX,GAAoB,CAA3C,EAA8C;AAC5C,YAAMC,OAAO,GAAGC,UAAU,CAAC,MAAMH,cAAc,CAACD,WAAW,GAAG,CAAf,CAArB,EAAwC,IAAxC,CAA1B;AACA,aAAO,MAAMK,YAAY,CAACF,OAAD,CAAzB;AACD;AACF,GALQ,CAAT;;AAOA,QAAMG,cAAc,GAAIC,MAAD,IAAY;AAC/B,QAAIC,iBAAiB,GAAIZ,SAAS,CAACM,MAAV,KAAqB,CAAtB,GAA2B,KAA3B,GAAmC,IAA3D;;AAEA,QAAIM,iBAAJ,EAAsB;AAClB,UAAIC,YAAY,GAAGb,SAAS,CAACc,MAAV,CAAiBH,MAAjB,CAAnB;AACAV,MAAAA,YAAY,CAACY,YAAD,CAAZ;;AACA,UAAIA,YAAY,CAACP,MAAb,KAAwB,CAAxB,IAA6BO,YAAY,CAAC,CAAD,CAAZ,KAAoBA,YAAY,CAAC,CAAD,CAAjE,EAAqE;AAEjEV,QAAAA,aAAa,CAACD,UAAU,CAACa,MAAX,CAAkBC,CAAC,IAAIA,CAAC,KAAKL,MAA7B,CAAD,CAAb;AACAV,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ;;AACD,WAAOW,iBAAP;AACH,GAbD;;AAeA,QAAMK,mBAAmB,GAAIN,MAAD,IAAY;AACpC,QAAIX,SAAS,CAACM,MAAV,KAAqB,CAAzB,EAA4B;AAE5BL,IAAAA,YAAY,CAACD,SAAS,CAACe,MAAV,CAAiBG,CAAC,IAAIA,CAAC,KAAKP,MAA5B,CAAD,CAAZ;AACH,GAJD;;AAKA,SAAO;AAAEX,IAAAA,SAAF;AAAaE,IAAAA,UAAb;AAAyBQ,IAAAA,cAAzB;AAAyCO,IAAAA;AAAzC,GAAP;AACH,CAjCD;;AAmCA,eAAelB,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useGameState = () => {\r\n    const [selecteds, setSelecteds] = useState([]);\r\n    const [availables, setAvailables] = useState([1, 2, 3, 4, 5, 6]); \r\n    const [secondsLeft, setSecondsLeft] = useState(10);\r\n\r\n    useEffect(() => {\r\n      if (secondsLeft > 0 && availables.length > 0) {\r\n        const timerId = setTimeout(() => setSecondsLeft(secondsLeft - 1), 1000);\r\n        return () => clearTimeout(timerId);\r\n      }\r\n    });\r\n\r\n    const addToSelecteds = (number) => {\r\n        let canAddToSelecteds = (selecteds.length === 2) ? false : true;\r\n        \r\n        if (canAddToSelecteds){                    \r\n            let newSelecteds = selecteds.concat(number);\r\n            setSelecteds(newSelecteds)            \r\n            if (newSelecteds.length === 2 && newSelecteds[0] === newSelecteds[1]){ \r\n               \r\n                setAvailables(availables.filter(e => e !== number ));\r\n                setSelecteds([]);\r\n            }           \r\n        }\r\n        return canAddToSelecteds;\r\n    }       \r\n\r\n    const removeFromSelecteds = (number) => {\r\n        if (selecteds.length === 0) return;\r\n\r\n        setSelecteds(selecteds.filter(s => s !== number));\r\n    }\r\n    return { selecteds, availables, addToSelecteds, removeFromSelecteds };\r\n}\r\n\r\nexport default useGameState;"]},"metadata":{},"sourceType":"module"}