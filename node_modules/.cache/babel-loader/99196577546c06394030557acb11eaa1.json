{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Scotto\\\\source\\\\repos\\\\react\\\\react-memo-test\\\\src\\\\Components\\\\Card.js\";\nimport React, { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport './Card.css';\nimport CardBack from '../images/back_card.jpg';\nimport Card1 from '../images/1.png';\nimport Card1Gray from '../images/1_gray.png';\nimport Card2 from '../images/2.png';\nimport Card2Gray from '../images/2_gray.png';\nimport Card3 from '../images/3.png';\nimport Card3Gray from '../images/3_gray.png';\nimport Card4 from '../images/4.png';\nimport Card4Gray from '../images/4_gray.png';\nimport Card5 from '../images/5.png';\nimport Card5Gray from '../images/5_gray.png';\nimport Card6 from '../images/6.png';\nimport Card6Gray from '../images/6_gray.png';\nconst Cards = [Card1, Card2, Card3, Card4, Card5, Card6];\nconst GrayCards = [Card1Gray, Card2Gray, Card3Gray, Card4Gray, Card5Gray, Card6Gray];\nexport default function Card(props) {\n  const [showImg, setShowImg] = useState(false);\n  const [useGrayImg, setUseGrayImg] = useState(false);\n  useEffect(() => {\n    if (typeof props.number !== 'undefined' && typeof props.availables !== 'undefined' && !props.availables.includes(props.number)) {\n      setUseGrayImg(true);\n    }\n\n    return () => {};\n  }, [props.availables, props.number]);\n\n  const revealNumber = () => {\n    setShowImg(props.onReveal(props.number));\n  };\n\n  const hideNumber = () => {\n    if (props.canHide(props.number)) {\n      props.onHide(props.number);\n      setShowImg(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    alt: \"BackCard\",\n    type: \"image\",\n    onClick: revealNumber,\n    className: \"img-card\",\n    src: CardBack,\n    style: {\n      display: showImg ? 'none' : 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    alt: \"FrontCard\",\n    type: \"image\",\n    onClick: hideNumber,\n    className: \"img-card\",\n    src: !useGrayImg ? Cards[props.number - 1] : GrayCards[props.number - 1],\n    style: {\n      display: showImg ? 'inline' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n}\nCard.propTypes = {\n  buildImageUrl: PropTypes.func,\n  buildGrayImageUrl: PropTypes.func,\n  number: PropTypes.number,\n  onReveal: PropTypes.func,\n  onHide: PropTypes.func,\n  canHide: PropTypes.func,\n  availables: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/Components/Card.js"],"names":["React","useState","useEffect","PropTypes","CardBack","Card1","Card1Gray","Card2","Card2Gray","Card3","Card3Gray","Card4","Card4Gray","Card5","Card5Gray","Card6","Card6Gray","Cards","GrayCards","Card","props","showImg","setShowImg","useGrayImg","setUseGrayImg","number","availables","includes","revealNumber","onReveal","hideNumber","canHide","onHide","display","propTypes","buildImageUrl","func","buildGrayImageUrl","array"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport './Card.css'\r\nimport CardBack from '../images/back_card.jpg';\r\nimport Card1 from '../images/1.png';\r\nimport Card1Gray from '../images/1_gray.png';\r\nimport Card2 from '../images/2.png';\r\nimport Card2Gray from '../images/2_gray.png';\r\nimport Card3 from '../images/3.png';\r\nimport Card3Gray from '../images/3_gray.png';\r\nimport Card4 from '../images/4.png';\r\nimport Card4Gray from '../images/4_gray.png';\r\nimport Card5 from '../images/5.png';\r\nimport Card5Gray from '../images/5_gray.png';\r\nimport Card6 from '../images/6.png';\r\nimport Card6Gray from '../images/6_gray.png';\r\n\r\n\r\nconst Cards = [ Card1, Card2, Card3, Card4, Card5, Card6 ];\r\nconst GrayCards = [ Card1Gray, Card2Gray, Card3Gray, Card4Gray, Card5Gray, Card6Gray ];\r\n\r\nexport default function Card(props) {    \r\n    const [showImg, setShowImg] = useState(false);    \r\n    const [useGrayImg, setUseGrayImg] = useState(false);\r\n\r\n    useEffect(() => {                      \r\n        if (typeof props.number !== 'undefined' \r\n                && typeof props.availables !== 'undefined' \r\n                && !props.availables.includes(props.number)){\r\n            setUseGrayImg(true);\r\n        }\r\n        return () => { }            \r\n    },[props.availables, props.number])\r\n\r\n    const revealNumber = () => {              \r\n        setShowImg(props.onReveal(props.number));             \r\n    }\r\n\r\n    const hideNumber = () => {\r\n        if (props.canHide(props.number))\r\n        {\r\n            props.onHide(props.number);\r\n            setShowImg(false);\r\n        }        \r\n    }\r\n\r\n    return (               \r\n        <div className=\"col-sm-3\">                  \r\n            <input \r\n                alt=\"BackCard\"\r\n                type=\"image\" \r\n                onClick={revealNumber} \r\n                className=\"img-card\" \r\n                src={CardBack}\r\n                style={{display: showImg ? 'none' : 'inline'}}\r\n                >\r\n            </input>       \r\n            <input \r\n                alt=\"FrontCard\"\r\n                type=\"image\"\r\n                onClick={hideNumber}          \r\n                className=\"img-card\"\r\n                src={!useGrayImg ? Cards[props.number - 1]: GrayCards[props.number - 1]}\r\n                style={{display: showImg ? 'inline' : 'none'}}     \r\n                >\r\n            </input>\r\n        </div>\r\n        );\r\n}\r\n\r\nCard.propTypes  = {\r\n    buildImageUrl: PropTypes.func,\r\n    buildGrayImageUrl: PropTypes.func,\r\n    number: PropTypes.number,    \r\n    onReveal: PropTypes.func,\r\n    onHide: PropTypes.func,\r\n    canHide: PropTypes.func,\r\n    availables: PropTypes.array\r\n}"]},"metadata":{},"sourceType":"module"}