{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useCardsHooks = (number, availablesNumbers) => {\n  const [showImg, setShowImg] = useState(false);\n  const [useGrayImg, setUseGrayImg] = useState(false);\n  const funct = useEffect(() => {\n    console.log(\"Using Effect\");\n\n    if (typeof number !== 'undefined' && typeof availables !== 'undefined' && !availablesNumbers.includes(number)) {\n      setUseGrayImg(true);\n    }\n\n    return () => {};\n  }, [availablesNumbers]);\n  return {\n    showImg,\n    setShowImg,\n    useGrayImg,\n    funct\n  };\n};\n\nexport default useCardsHooks;","map":{"version":3,"sources":["C:/Users/Sergio Scotto/source/repos/react/react-memo-test/src/CustomHooks/UseCardsHooks.js"],"names":["useState","useEffect","useCardsHooks","number","availablesNumbers","showImg","setShowImg","useGrayImg","setUseGrayImg","funct","console","log","availables","includes"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,iBAAT,KAA+B;AACjD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMS,KAAK,GAAGR,SAAS,CAAC,MAAM;AAC1BS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAI,OAAOR,MAAP,KAAkB,WAAlB,IACO,OAAOS,UAAP,KAAsB,WAD7B,IAEO,CAACR,iBAAiB,CAACS,QAAlB,CAA2BV,MAA3B,CAFZ,EAE+C;AAC3CK,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AACD,WAAO,MAAM,CAAG,CAAhB;AACH,GARsB,EAQrB,CAACJ,iBAAD,CARqB,CAAvB;AAUA,SAAO;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,UAAtB;AAAkCE,IAAAA;AAAlC,GAAP;AACH,CAfD;;AAiBA,eAAeP,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useCardsHooks = (number, availablesNumbers) => {\r\n    const [showImg, setShowImg] = useState(false);    \r\n    const [useGrayImg, setUseGrayImg] = useState(false);\r\n\r\n    const funct = useEffect(() => {    \r\n        console.log(\"Using Effect\");                  \r\n        if (typeof number !== 'undefined' \r\n                && typeof availables !== 'undefined' \r\n                && !availablesNumbers.includes(number)){\r\n            setUseGrayImg(true);\r\n        }\r\n        return () => { }            \r\n    },[availablesNumbers])    \r\n\r\n    return {showImg, setShowImg, useGrayImg, funct  }\r\n}\r\n\r\nexport default useCardsHooks;"]},"metadata":{},"sourceType":"module"}